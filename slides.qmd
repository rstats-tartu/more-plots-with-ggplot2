---
title: "Preparing ggplot2 plots"
author: Taavi Päll
date: "2023-10-18"
format: revealjs
code-annotations: below
---

```{r, include=FALSE}
library(tidyverse)
library(here)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
```


## Introduction

Making a good statistical graph is difficult and usually takes many iterations, where we progressively improve different aspects of our plot: 

- scale,         
- transformation of a variable,     
- addition of information,     
- color palette,     
- markers, etc.    

## Three guiding principles to good graphs {.smaller}

1. Make the data stand out: 
    - fill data region, transform, choose an appropriate scale for an axis, avoid chart junk, avoid having graph elements interfering with data, deal with overplotting (jittering, transparency)

2. Facilitate comparison:
    - what is the important comparison and how to emphasize it -- different groups, bring out points, add reference markers, juxtapose and superpose groups, color palettes and color blindness

3. Add information by labeling axes and using labels, annotating points/lines


## Composing a ggplot 

Probably, you already know how to create a ggplot2 plot. Here is just a remainder that ggplot2 plot is composed layer-by-layer

+ **ggplot2 works iteratively** -- you start with a layer showing the raw data and then add layers of geoms, annotations, and statistical summaries.

## To compose plots, you have to supply minimally

+ **Data** that you want to visualize and 
+ **aes**thetic **mappings** -- what's on x-axis, what's on y-axis, and how to you want to group and color your data. Mapped arguments must be found in your data!
+ **Layers** made up of **geom**etric elements: points, lines, boxes, etc. What's shown on plot.

Visualisation of these three components within ggplot context generally looks like this:

```r
ggplot(data = <DATA>) +
  <GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
```



## Let's try to recreate a plot 

```{r, echo=FALSE, fig.cap="SARS-CoV-2 clade prevalence in Estonia"}
include_graphics(here("plots/Fig_3.png"))
```


# First, little background

 
**SARS-CoV-2 clade dynamics and their associations with hospitalization during the first two years of the COVID-19 pandemic**

Taavi Päll1*, Aare Abroi2*, Radko Avi1, Heiki Niglas3, Arina Shablinskaja1, Merit Pauskar1, Ene-Ly Jõgeda1, Hiie Soeorg1, Eveli Kallas1, Andrio Lahesaare4, Kai Truusalu1, Dagmar Hoidmets1, Olga Sadikova3, Kaspar Ratnik4, Hanna Sepp3, Liidia Dotsenko3, Jevgenia Epštein3, Heleene Suija3, Katrin Kaarna5,9, Steven Smit6, Lili Milani6, Mait Metspalu6, Ott Eric Oopkaup7, Ivar Koppel7, Erik Jaaniso8, Ivan Kuzmin7, Heleri Inno7, Uku Raudvere7, Mari-Anne Härma3, Paul Naaber1,4, Tuuli Reisberg6, Hedi Peterson8, Ulvi Gerst Talas7, Irja Lutsar1, Kristi Huik1


## Testing and sequencing of SARS-CoV-2 in Estonia {.smaller}

```{r, echo=FALSE, fig.cap="Testing and sequencing of SARS-CoV-2 in Estonia. Bars show the number of tests performed (left axis) and the line denotes the percentage of positive samples sequenced (right axis). Vertical lines denote the duration of waves, defined by the prevalence of Nextstrain clade(s). The wave start and end were defined as a week when the lower or upper bound, respectively, of the 95% confidence interval of clade prevalence, obtained by the Clopper-Pearson method, crossed the 50% threshold."}
include_graphics(here("plots/Fig_2.png"))
```


## Waves of SARS-CoV-2 in Estonia

```{r, echo=FALSE, fig.cap="A, the prevalence of Nextstrain clades. B, the prevalence of VOCs. Full-length sequencing was not applied to samples collected between W47 to W52 2020."}
include_graphics(here("plots/Fig_3.png"))
```


## Diversity of SARS-CoV-2 lineages in domestic and travel-related cases in Estonia


```{r, echo=FALSE, fig.cap="A, Shannon diversity index. Points denote individual weekly observations. The line denotes the autoregressive model fitted to data and the shaded ribbon denotes a 95% credible interval, N = 14,341. B, the effect size of the Shannon index, imported cases compared to domestic cases. The line denotes the effect size derived from the model fit shown in panel A and the shaded ribbon denotes a 95% credible interval. "}
include_graphics(here("plots/Fig_4.png"))
```


## Hospitalization of SARS-CoV-2 positive individuals in Estonia

```{r, echo=FALSE, fig.cap="A, probability of hospitalization is associated with vaccination status, age, and clade. Posterior summaries of the conditional effect of the clade, vaccination status, and age in logistic regression adjusted for sex, number of weekly cases, and population vaccination coverage, N = 23,456. B, log odds ratio of hospitalization in vaccinated compared with unvaccinated SARS-CoV-2 positive individuals. C, log odds ratio of hospitalization of unvaccinated SARS-CoV-2 positive individuals infected with Omicron 21K (upper panels) or 21L (lower panels) compared with individuals infected with other common SARS-CoV-2 clades. Line denotes the model’s best estimate and the ribbon denotes a 95% credible interval. The solid line denotes the span of ages observed for each clade, dashed line denotes unobserved ages implied by the underlying model. The dotted line denotes log odds = 0."}
include_graphics(here("plots/Fig_5.png"))
```


## Conclusions

We characterized the circulating variants in Estonia from March 2020 to March 2022 by genotyping about 7% of SARS-CoV-2-positive samples.     

1. the prevalence of the clades in Estonia resembled other European countries,      
2. different VOC waves varied in diversity with the highest diversity seen in the Delta wave and the lowest in the Alpha wave, 
3. the probability of hospitalization was associated with clade as two Omicron clades (21K and 21L) displayed lower hospitalization compared to all other common clades,        
4. the protective effect of the vaccination against severe disease, associated with hospitalization, was seen from age 40 years onwards and the effect increased with age. 


## Plot data {.smaller}

Genotyped COVID-19-positive samples:  
- lineage and clade determined from full genome sequences      
- we have sample date    

```{r}
library(tidyverse)
library(here) # here() uses a reasonable heuristics to find your project's files, based on the current working directory at the time when the package is loaded.
(korogeno <- read_csv(here("data/korogeno.csv")))
```

## What we see?

::: {.incremental}
- It's a bar plot displaying *weekly* prevalence of SARS-CoV-2 clades (A) or VOCs -- "variant of concern" (B). 
  - Do we have all variables present in data?
      - missing "year and week" variable
      - missing VOC
  - What geom to use?
      - geom_bar()
  - How to you transform counts to proportions?
      - geom_bar(position = "fill")
:::


## VOCs

Variants are categorised as a Variant of concern (VOC) if there is clear evidence that the variant will have/is having a marked impact on the epidemiological situation in a population. 

This is likely to occur because the variant is more transmissable, causes more severe disease, and/or has a more detrimental effect on host immunity. Source: https://www.pathogens.se/pathogens/voc/

## VOCs ...

::: {.incremental}
- VOC designation is present in **clade** names
    - We have three VOCs that were epidemiologically important in Estonia -- Alpha, Delta, Omicron
    - We have "minor" VOCs that did not take off -- "Other VOCs"
    - We have non-VOCs -- "Other"
- How do we create new varable 
     - We can use a combination of `case_when` function and `str_detect` function from **tidyverse**

:::

## Year and month 

Year and week variable can be created with package **tsibble**
```{r}
library(tsibble)
yearweek("2023-10-18")
```

**tsibble** provides also axis formatting function to display year and month (changing the scale on x-axis)
```{r}
?scale_x_yearmonth
?scale_x_date # for a full set of parameters
```


## Formatting x-axis labels

In order to format x-axis labels one can use `strftime` command:
```{r}
strftime("2023-10-18", "%Y W%W (%b)") 
```

OR

```{r}
yw <- yearweek("2023-10-18")
strftime(yw, "%Y W%W (%b)") 
```

`"%Y W%W (%b)"` -- to display four digit year (%Y) and week of the year (%W) prefixed with literal 'W' and actual month abbreviation (%b) in brackets



## Adding more information/annotations to plot

::: {.incremental}
- There is another layer added to panel A, showing waves based on most prevalent clade. What geoms this layer consists of?
    - geom_segment 
    - geom_text
- Waves are defined by 50% prevalence threshold 
    - Is this information present in our dataset?
    - How we can summarise our dataset, first, to obtain prevalence and, second, to obtain start and end dates of waves
:::



## Formatting axes and legends

*Themes are a powerful way to customize the non-data components of your plots: i.e. titles, labels, fonts, background, gridlines, and legends.* (From: `theme {ggplot2}`)

Let's say you want to change angle of x-axis labels:
```{r, eval=FALSE}
p + theme(axis.text.x = element_text(angle = 90))
```

`hjust` and `vjust` arguments inside `element_text` can be used to adjust/fix axis-label placement relative to tick marks.

To make some element disappear:
```{r, eval=FALSE}
p + theme(axis.title.x = element_blank())
```



## Composing figure

- Complex figures with multiple panels can be composed using **patchwork** package

```{r}
library(patchwork) # install.packages("patchwork") if missing

p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))

p1 + p2 + plot_annotation(tag_levels = "A")
```



## Let's start!



